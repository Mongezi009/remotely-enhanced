version: '3.8'

services:
  remotely-server:
    build:
      context: .
      dockerfile: Server/Dockerfile
    container_name: remotely-enhanced-server
    restart: unless-stopped
    ports:
      - "5000:5000"   # HTTP
      - "5001:5001"   # HTTPS
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:5001;http://+:5000
      - ASPNETCORE_Kestrel__Certificates__Default__Password=remotely
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/remotely.pfx
      - ConnectionStrings__SQLite=Data Source=/app/AppData/Remotely.db
      - ApplicationOptions__DBProvider=SQLite
      - ApplicationOptions__MaxOrganizationCount=-1
      - ApplicationOptions__EnableWindowsEventLog=false
      - ApplicationOptions__EnforceAttendedAccess=false
      - ApplicationOptions__RemoteControlNotifyUsers=true
      - ApplicationOptions__RemoteControlRequiresAuthentication=false
      - ApplicationOptions__EnableRemoteControlRecording=false
      - ApplicationOptions__DataRetentionInDays=30
      - ApplicationOptions__AllowApiLogin=false
      - ApplicationOptions__TrustedCorsOrigins=
      - ApplicationOptions__KnownProxies=
      - ApplicationOptions__Theme=Dark
      - ApplicationOptions__UseHsts=false
      - ApplicationOptions__RedirectToHttps=true
      - ApplicationOptions__UseHttpLogging=false
      - EnhancedFeatures__EnableComprehensiveScanning=true
      - EnhancedFeatures__ScanIntervalMinutes=60
      - EnhancedFeatures__QuickUpdateIntervalMinutes=5
      - EnhancedFeatures__EnableSecurityScanning=true
      - EnhancedFeatures__EnablePerformanceMonitoring=true
      - EnhancedFeatures__MaxConcurrentRemoteSessions=10
      - EnhancedFeatures__EnableAudioStreaming=false
      - EnhancedFeatures__DefaultStreamQuality=High
      - EnhancedFeatures__EnableFileStreaming=true
      - EnhancedFeatures__MaxFileStreamSizeMB=1024
    volumes:
      - remotely-data:/app/AppData
      - ./certs:/https:ro
    networks:
      - remotely-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  remotely-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: remotely-enhanced-db
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=RemotelyEnhanced123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - remotely-db-data:/var/opt/mssql
    networks:
      - remotely-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P RemotelyEnhanced123! -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  remotely-proxy:
    image: caddy:2-alpine
    container_name: remotely-enhanced-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      remotely-server:
        condition: service_healthy
    networks:
      - remotely-network
    environment:
      - DOMAIN=remotely.yourdomain.com

  remotely-redis:
    image: redis:7-alpine
    container_name: remotely-enhanced-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - remotely-redis-data:/data
    networks:
      - remotely-network
    command: redis-server --appendonly yes --requirepass RemotelyRedis123!
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  remotely-data:
    driver: local
  remotely-db-data:
    driver: local
  remotely-redis-data:
    driver: local
  caddy-data:
    driver: local
  caddy-config:
    driver: local

networks:
  remotely-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16